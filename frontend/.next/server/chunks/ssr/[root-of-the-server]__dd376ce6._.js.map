{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Desktop/LinkdinClone/frontend/src/config/index.jsx"],"sourcesContent":["const { default: axios } = require(\"axios\");\r\n\r\nexport const clientServer = axios.create({\r\n  baseURL: \" http://localhost:8080\",\r\n});\r\n"],"names":[],"mappings":";;;AAAA,MAAM,EAAE,SAAS,KAAK,EAAE;AAEjB,MAAM,eAAe,MAAM,MAAM,CAAC;IACvC,SAAS;AACX","debugId":null}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Desktop/LinkdinClone/frontend/src/config/redux/action/authAction/index.js"],"sourcesContent":["import { clientServer } from \"@/config\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n// First create Thunk\r\nexport const loginUser = createAsyncThunk(\r\n  \"user/login\",\r\n  async (user, thunkAPI) => {\r\n    try {\r\n      const response = await clientServer.post(\"/login\", {\r\n        email: user.email,\r\n        password: user.password,\r\n      });\r\n\r\n      if (response.data.token) {\r\n        localStorage.setItem(\"token\", response.data.token);\r\n      } else {\r\n        return thunkAPI.rejectWithValue({\r\n          message: \"token not provided\",\r\n        });\r\n      }\r\n      return thunkAPI.fulfillWithValue(response.data.token);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\n// registerUser\r\n\r\nexport const registerUser = createAsyncThunk(\r\n  \"user/register\",\r\n  async (user, thunkAPI) => {\r\n    try {\r\n      const response = await clientServer.post(\"register\", {\r\n        name: user.name,\r\n        username: user.username,\r\n        email: user.email,\r\n        password: user.password,\r\n      });\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;;;;AAGO,MAAM,YAAY,CAAA,GAAA,wIAAA,CAAA,mBAAgB,AAAD,EACtC,cACA,OAAO,MAAM;IACX,IAAI;QACF,MAAM,WAAW,MAAM,gHAAA,CAAA,eAAY,CAAC,IAAI,CAAC,UAAU;YACjD,OAAO,KAAK,KAAK;YACjB,UAAU,KAAK,QAAQ;QACzB;QAEA,IAAI,SAAS,IAAI,CAAC,KAAK,EAAE;YACvB,aAAa,OAAO,CAAC,SAAS,SAAS,IAAI,CAAC,KAAK;QACnD,OAAO;YACL,OAAO,SAAS,eAAe,CAAC;gBAC9B,SAAS;YACX;QACF;QACA,OAAO,SAAS,gBAAgB,CAAC,SAAS,IAAI,CAAC,KAAK;IACtD,EAAE,OAAO,OAAO;QACd,OAAO,SAAS,eAAe,CAAC,MAAM,QAAQ,CAAC,IAAI;IACrD;AACF;AAKK,MAAM,eAAe,CAAA,GAAA,wIAAA,CAAA,mBAAgB,AAAD,EACzC,iBACA,OAAO,MAAM;IACX,IAAI;QACF,MAAM,WAAW,MAAM,gHAAA,CAAA,eAAY,CAAC,IAAI,CAAC,YAAY;YACnD,MAAM,KAAK,IAAI;YACf,UAAU,KAAK,QAAQ;YACvB,OAAO,KAAK,KAAK;YACjB,UAAU,KAAK,QAAQ;QACzB;IACF,EAAE,OAAO,OAAO;QACd,OAAO,SAAS,eAAe,CAAC,MAAM,QAAQ,CAAC,IAAI;IACrD;AACF","debugId":null}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Desktop/LinkdinClone/frontend/src/config/redux/reducer/authReducer/index.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { loginUser, registerUser } from \"../../action/authAction\";\r\n\r\nconst initialState = {\r\n  user: [],\r\n  isError: false,\r\n  isSuccess: false,\r\n  isLoading: false,\r\n  loggedIn: false,\r\n  message: \" \",\r\n  profileFetch: false,\r\n  connections: [],\r\n  connectionsRequest: [],\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    reset: () => initialState,\r\n    handleLoginUser: (state) => {\r\n      state.message = \" Hello\";\r\n    },\r\n    emptyMessage :(state)=>{\r\n      state.message= \" \";\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(loginUser.pending, (state, action) => {\r\n        (state.isLoading = true), (state.message = \"loading...\");\r\n      })\r\n      .addCase(loginUser.fulfilled, (state, action) => {\r\n        (state.isLoading = false),\r\n          (state.isError = false),\r\n          (state.loggedIn = true),\r\n          (state.isSuccess = true),\r\n          (state.message = \"Login success\");\r\n      })\r\n      .addCase(loginUser.rejected, (state, action) => {\r\n        (state.isLoading = false),\r\n          (state.isError = true),\r\n          (state.message = action.payload);\r\n      })\r\n      .addCase(registerUser.pending, (state, action) => {\r\n        (state.isLoading = true), (state.message = \"Register user...\");\r\n      })\r\n      .addCase(registerUser.fulfilled, (state, action) => {\r\n        (state.isLoading = false),\r\n          (state.isError = false),\r\n          (state.loggedIn = true),\r\n          (state.isSuccess = true),\r\n          (state.message = {\r\n            message: \"Register successfully\",\r\n          });\r\n      })\r\n      .addCase(registerUser.rejected, (state, action) => {\r\n        (state.isLoading = false),\r\n          (state.isError = true),\r\n          (state.message = action.payload);\r\n      });\r\n  },\r\n});\r\n\r\nexport const {reset , emptyMessage} = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;;;;;;AAEA,MAAM,eAAe;IACnB,MAAM,EAAE;IACR,SAAS;IACT,WAAW;IACX,WAAW;IACX,UAAU;IACV,SAAS;IACT,cAAc;IACd,aAAa,EAAE;IACf,oBAAoB,EAAE;AACxB;AAEA,MAAM,YAAY,CAAA,GAAA,wIAAA,CAAA,cAAW,AAAD,EAAE;IAC5B,MAAM;IACN;IACA,UAAU;QACR,OAAO,IAAM;QACb,iBAAiB,CAAC;YAChB,MAAM,OAAO,GAAG;QAClB;QACA,cAAc,CAAC;YACb,MAAM,OAAO,GAAE;QACjB;IACF;IACA,eAAe,CAAC;QACd,QACG,OAAO,CAAC,gJAAA,CAAA,YAAS,CAAC,OAAO,EAAE,CAAC,OAAO;YACjC,MAAM,SAAS,GAAG,MAAQ,MAAM,OAAO,GAAG;QAC7C,GACC,OAAO,CAAC,gJAAA,CAAA,YAAS,CAAC,SAAS,EAAE,CAAC,OAAO;YACnC,MAAM,SAAS,GAAG,OAChB,MAAM,OAAO,GAAG,OAChB,MAAM,QAAQ,GAAG,MACjB,MAAM,SAAS,GAAG,MAClB,MAAM,OAAO,GAAG;QACrB,GACC,OAAO,CAAC,gJAAA,CAAA,YAAS,CAAC,QAAQ,EAAE,CAAC,OAAO;YAClC,MAAM,SAAS,GAAG,OAChB,MAAM,OAAO,GAAG,MAChB,MAAM,OAAO,GAAG,OAAO,OAAO;QACnC,GACC,OAAO,CAAC,gJAAA,CAAA,eAAY,CAAC,OAAO,EAAE,CAAC,OAAO;YACpC,MAAM,SAAS,GAAG,MAAQ,MAAM,OAAO,GAAG;QAC7C,GACC,OAAO,CAAC,gJAAA,CAAA,eAAY,CAAC,SAAS,EAAE,CAAC,OAAO;YACtC,MAAM,SAAS,GAAG,OAChB,MAAM,OAAO,GAAG,OAChB,MAAM,QAAQ,GAAG,MACjB,MAAM,SAAS,GAAG,MAClB,MAAM,OAAO,GAAG;gBACf,SAAS;YACX;QACJ,GACC,OAAO,CAAC,gJAAA,CAAA,eAAY,CAAC,QAAQ,EAAE,CAAC,OAAO;YACrC,MAAM,SAAS,GAAG,OAChB,MAAM,OAAO,GAAG,MAChB,MAAM,OAAO,GAAG,OAAO,OAAO;QACnC;IACJ;AACF;AAEO,MAAM,EAAC,KAAK,EAAG,YAAY,EAAC,GAAG,UAAU,OAAO;uCACxC,UAAU,OAAO","debugId":null}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Desktop/LinkdinClone/frontend/src/config/redux/action/postAction/index.js"],"sourcesContent":["import { clientServer } from \"@/config\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nexport const getAllPost = createAsyncThunk(\r\n  \"post/getAllPost\",\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      const response = await clientServer.get(\"/getAllPost\");\r\n      return thunkAPI.fulfillWithValue(response.data);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response);\r\n    }\r\n  }\r\n);\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;;;;;AAEO,MAAM,aAAa,CAAA,GAAA,wIAAA,CAAA,mBAAgB,AAAD,EACvC,mBACA,OAAO,GAAG;IACR,IAAI;QACF,MAAM,WAAW,MAAM,gHAAA,CAAA,eAAY,CAAC,GAAG,CAAC;QACxC,OAAO,SAAS,gBAAgB,CAAC,SAAS,IAAI;IAChD,EAAE,OAAO,OAAO;QACd,OAAO,SAAS,eAAe,CAAC,MAAM,QAAQ;IAChD;AACF","debugId":null}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Desktop/LinkdinClone/frontend/src/config/redux/store.js"],"sourcesContent":["/** STEPS for State Management\r\n * Submit Action\r\n * Handle action in it's reducer\r\n * Register Here -> Reducer\r\n * */\r\n\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport authSlice from \"./reducer/authReducer\";\r\nimport postSlice from \"./reducer/postReducer\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: authSlice,\r\n    post: postSlice,\r\n  },\r\n});\r\n"],"names":[],"mappings":"AAAA;;;;GAIG;;;AAEH;AACA;AACA;;;;;;;;;AAEO,MAAM,QAAQ,CAAA,GAAA,wIAAA,CAAA,iBAAc,AAAD,EAAE;IAClC,SAAS;QACP,MAAM,kJAAA,CAAA,UAAS;QACf,MAAM,kJAAA,CAAA,UAAS;IACjB;AACF","debugId":null}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Desktop/LinkdinClone/frontend/src/pages/_app.js"],"sourcesContent":["import { store} from \"@/config/redux/store\";\nimport \"@/styles/globals.css\";\nimport { Provider } from \"react-redux\";\n\nexport default function App({ Component, pageProps }) {\n  return (\n    <>\n      <Provider store={store}>\n        <Component {...pageProps} />\n      </Provider>\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;;;;;;;AAEe,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE;IAClD,qBACE;kBACE,cAAA,qKAAC,4HAAA,CAAA,WAAQ;YAAC,OAAO,wHAAA,CAAA,QAAK;sBACpB,cAAA,qKAAC;gBAAW,GAAG,SAAS;;;;;;;;;;;;AAIhC","debugId":null}}]
}