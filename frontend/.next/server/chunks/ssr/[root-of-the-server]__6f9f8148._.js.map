{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Desktop/LinkdinClone/frontend/src/config/index.jsx"],"sourcesContent":["import axios from \"axios\";\r\nexport const BASE_URL = \" http://localhost:8080\";\r\nexport const clientServer = axios.create({\r\n  baseURL: BASE_URL,\r\n});\r\n"],"names":[],"mappings":";;;;AAAA;;;;;;AACO,MAAM,WAAW;AACjB,MAAM,eAAe,0GAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvC,SAAS;AACX","debugId":null}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Desktop/LinkdinClone/frontend/src/config/redux/action/authAction/index.js"],"sourcesContent":["import { clientServer } from \"@/config\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n// First create Thunk\r\nexport const loginUser = createAsyncThunk(\r\n  \"user/login\",\r\n  async (user, thunkAPI) => {\r\n    try {\r\n      const response = await clientServer.post(\"/login\", {\r\n        email: user.email,\r\n        password: user.password,\r\n      });\r\n\r\n      if (response.data.token) {\r\n        localStorage.setItem(\"token\", response.data.token);\r\n      } else {\r\n        return thunkAPI.rejectWithValue({\r\n          message: \"token not provided\",\r\n        });\r\n      }\r\n      return thunkAPI.fulfillWithValue(response.data.token);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\n// registerUser\r\n\r\nexport const registerUser = createAsyncThunk(\r\n  \"user/register\",\r\n  async (user, thunkAPI) => {\r\n    try {\r\n      const response = await clientServer.post(\"register\", {\r\n        name: user.name,\r\n        username: user.username,\r\n        email: user.email,\r\n        password: user.password,\r\n      });\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const getUserProfile = createAsyncThunk(\r\n  \"/user/getUserProfile\",\r\n  async (user, thunkAPI) => {\r\n    try {\r\n      const response = await clientServer.get(\"/getUserProfile\", {\r\n        params: {\r\n          token: user.token,\r\n        },\r\n      });\r\n      return thunkAPI.fulfillWithValue(response.data);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response);\r\n    }\r\n  }\r\n);\r\n\r\nexport const getAllUserProfileData = createAsyncThunk(\r\n  \"/getAllUserProfileData\",\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      const response = await clientServer.get(\"/getAllUserProfileData\");\r\n      return thunkAPI.fulfillWithValue(response.data);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const sendConnectionRequest = createAsyncThunk(\r\n  \"/sendConnectionRequest\",\r\n\r\n  async (sendCon, thunkAPI) => {\r\n    try {\r\n      const response = await clientServer.post(\"/connection/sendRequest\", {\r\n        token: sendCon.token,\r\n        connectionId: sendCon.user_id,\r\n      });\r\n\r\n      thunkAPI.dispatch(getConnectionRequest({ token: sendCon.token }));\r\n      return thunkAPI.fulfillWithValue(response.data);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const getConnectionRequest = createAsyncThunk(\r\n  \"/getConnectionRequest\",\r\n  async (getCon, thunkAPI) => {\r\n    try {\r\n      const response = await clientServer.get(\"/getAllConnectionRequest\", {\r\n        params: {\r\n          token: getCon.token,\r\n        },\r\n      });\r\n\r\n      return thunkAPI.fulfillWithValue(response.data.connections);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const myConnectionRequest = createAsyncThunk(\r\n  \"/myConnectionRequest\",\r\n  async (myCon, thunkAPI) => {\r\n    try {\r\n      const response = await clientServer.get(\"/myConnectionRequest\", {\r\n        params: {\r\n          token: myCon.token,\r\n        },\r\n      });\r\n      return thunkAPI.fulfillWithValue(response.data);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const acceptConnectionRequest = createAsyncThunk(\r\n  \"/acceptConnectionRequest\",\r\n  async (accetCon, thunkAPI) => {\r\n    try {\r\n      const response = await clientServer.post(\"/acceptConnectionRequest\", {\r\n        token: accetCon.token,\r\n        action_type: accetCon.action,\r\n        requestId: accetCon.connectionId,\r\n      });\r\n\r\n      thunkAPI.dispatch(getConnectionRequest({ token: accetCon.token }));\r\n      thunkAPI.dispatch(myConnectionRequest({ token: accetCon.token }));\r\n\r\n      return thunkAPI.fulfillWithValue(response.data);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Desktop/LinkdinClone/frontend/src/config/redux/reducer/authReducer/index.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport {\r\n  getAllUserProfileData,\r\n  getConnectionRequest,\r\n  getUserProfile,\r\n  loginUser,\r\n  myConnectionRequest,\r\n  registerUser,\r\n} from \"../../action/authAction\";\r\n\r\nconst initialState = {\r\n  user: [],\r\n  AllUser: [],\r\n  isError: false,\r\n  isSuccess: false,\r\n  isLoading: false,\r\n  loggedIn: false,\r\n  isTokenThere: false,\r\n  message: \" \",\r\n  getUserProfileFetch: false,\r\n  profileFetch: false,\r\n  connections: [],\r\n  connectionsRequest: [],\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    reset: () => initialState,\r\n    handleLoginUser: (state) => {\r\n      state.message = \" Hello\";\r\n    },\r\n    emptyMessage: (state) => {\r\n      state.message = \" \";\r\n    },\r\n    setIsTokenThere: (state) => {\r\n      state.isTokenThere = true;\r\n    },\r\n    setIsTokenNotThere: (state) => {\r\n      state.isTokenThere = false;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(loginUser.pending, (state, action) => {\r\n        (state.isLoading = true), (state.message = \"loading...\");\r\n      })\r\n      .addCase(loginUser.fulfilled, (state, action) => {\r\n        (state.isLoading = false),\r\n          (state.isError = false),\r\n          (state.loggedIn = true),\r\n          (state.isSuccess = true),\r\n          (state.message = \"Login success\");\r\n      })\r\n      .addCase(loginUser.rejected, (state, action) => {\r\n        (state.isLoading = false),\r\n          (state.isError = true),\r\n          (state.message = action.payload);\r\n      })\r\n      .addCase(registerUser.pending, (state, action) => {\r\n        (state.isLoading = true), (state.message = \"Register user...\");\r\n      })\r\n      .addCase(registerUser.fulfilled, (state, action) => {\r\n        (state.isLoading = false),\r\n          (state.isError = false),\r\n          (state.loggedIn = true),\r\n          (state.isSuccess = true),\r\n          (state.message = {\r\n            message: \"Register successfully\",\r\n          });\r\n      })\r\n      .addCase(registerUser.rejected, (state, action) => {\r\n        (state.isLoading = false),\r\n          (state.isError = true),\r\n          (state.message = action.payload);\r\n      })\r\n      .addCase(getUserProfile.fulfilled, (state, action) => {\r\n        (state.isLoading = false),\r\n          (state.isError = false),\r\n          (state.profileFetch = true),\r\n          (state.user = action.payload.profile);\r\n      })\r\n      .addCase(getAllUserProfileData.fulfilled, (state, action) => {\r\n        (state.isLoading = false),\r\n          (state.isError = false),\r\n          (state.getUserProfileFetch = true),\r\n          (state.AllUser = action.payload.profile);\r\n      })\r\n      .addCase(getConnectionRequest.fulfilled, (state, action) => {\r\n        state.connections = action.payload;\r\n      })\r\n      .addCase(getConnectionRequest.rejected, (state, action) => {\r\n        state.message = action.payload;\r\n      })\r\n      .addCase(myConnectionRequest.fulfilled, (state, action) => {\r\n        state.connectionsRequest = action.payload;\r\n      })\r\n      .addCase(myConnectionRequest.rejected, (state, action) => {\r\n        state.message = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset, emptyMessage, setIsTokenNotThere, setIsTokenThere } =\r\n  authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 267, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Desktop/LinkdinClone/frontend/src/config/redux/action/postAction/index.js"],"sourcesContent":["import { clientServer } from \"@/config\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nexport const getAllPost = createAsyncThunk(\r\n  \"post/getAllPost\",\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      const response = await clientServer.get(\"/getAllPost\");\r\n      return thunkAPI.fulfillWithValue(response.data);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response);\r\n    }\r\n  }\r\n);\r\n\r\nexport const createPost = createAsyncThunk(\r\n  \"post/createPost\",\r\n  async (userData, thunkAPI) => {\r\n    const { file, body } = userData;\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"token\", localStorage.getItem(\"token\"));\r\n      formData.append(\"body\", body);\r\n      formData.append(\"media\", file);\r\n\r\n      const response = await clientServer.post(\"/post\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n\r\n      if (response.status === 2000) {\r\n        return thunkAPI.fulfillWithValue(\" Post Upload\");\r\n      } else {\r\n        return thunkAPI.rejectWithValue(\"Not Post Data\");\r\n      }\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const deletePost = createAsyncThunk(\r\n  \"post/deletePost\",\r\n  async (post_id, thunkAPI) => {\r\n    try {\r\n      const response = await clientServer.delete(\"/deletePost\", {\r\n        data: {\r\n          token: localStorage.getItem(\"token\"),\r\n          post_id: post_id.post_id,\r\n        },\r\n      });\r\n      console.log(response);\r\n      return thunkAPI.fulfillWithValue(response.data);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const increamentLikes = createAsyncThunk(\r\n  \"post/increamentLikes\",\r\n  async (post, thunkAPI) => {\r\n    try {\r\n      const response = await clientServer.post(\"/likes\", {\r\n        post_id: post.post_id,\r\n      });\r\n      return thunkAPI.fulfillWithValue(response.data);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const getAllComment = createAsyncThunk(\r\n  \"/post/getAllComment\",\r\n  async (postData, thunkAPI) => {\r\n    try {\r\n      const response = await clientServer.get(\"/getAllcomment\", {\r\n        params: {\r\n          post_id: postData.post_id,\r\n        },\r\n      });\r\n      return thunkAPI.fulfillWithValue({\r\n        comment: response.data,\r\n        post_id: postData.post_id,\r\n      });\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const postComments = createAsyncThunk(\r\n  \"/post/postComment\",\r\n  async (CommentData, thunkAPI) => {\r\n    try {\r\n      const response = await clientServer.post(\"/comment\", {\r\n        token: localStorage.getItem(\"token\"),\r\n        post_id: CommentData.post_id,\r\n        commentBody: CommentData.body,\r\n      });\r\n\r\n      return thunkAPI.fulfillWithValue(response.data);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 371, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Desktop/LinkdinClone/frontend/src/config/redux/reducer/postReducer/index.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getAllComment, getAllPost } from \"../../action/postAction\";\r\n\r\nconst initialState = {\r\n  post: [],\r\n  isError: false,\r\n  isPostFetch: false,\r\n  isLoading: false,\r\n  loggedIn: false,\r\n  message: \"\",\r\n  comments: [],\r\n  postId: \"\",\r\n};\r\n\r\nconst postSlice = createSlice({\r\n  name: \"post\",\r\n  initialState,\r\n  reducers: {\r\n    reset: () => initialState,\r\n    resetPost: (state) => {\r\n      state.postId = \"\";\r\n    },\r\n  },\r\n\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getAllPost.pending, (state, action) => {\r\n        (state.isLoading = true), (state.message = \" Fetching all post...\");\r\n      })\r\n      .addCase(getAllPost.fulfilled, (state, action) => {\r\n        (state.isError = false),\r\n          (state.isLoading = false),\r\n          (state.loggedIn = true),\r\n          (state.isPostFetch = true),\r\n          (state.post = action.payload.post.reverse());\r\n      })\r\n      .addCase(getAllPost.rejected, (state, action) => {\r\n        (state.isError = true),\r\n          (state.isLoading = false),\r\n          (state.message = action.payload);\r\n      })\r\n      .addCase(getAllComment.fulfilled, (state, action) => {\r\n        state.postId = action.payload.post_id;\r\n        state.comments = action.payload.comment;\r\n        console.log(state.comments);\r\n      });\r\n  },\r\n});\r\n\r\nexport const { resetPost } = postSlice.actions;\r\n\r\nexport default postSlice.reducer;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;;;;;AAEA,MAAM,eAAe;IACnB,MAAM,EAAE;IACR,SAAS;IACT,aAAa;IACb,WAAW;IACX,UAAU;IACV,SAAS;IACT,UAAU,EAAE;IACZ,QAAQ;AACV;AAEA,MAAM,YAAY,CAAA,GAAA,wIAAA,CAAA,cAAW,AAAD,EAAE;IAC5B,MAAM;IACN;IACA,UAAU;QACR,OAAO,IAAM;QACb,WAAW,CAAC;YACV,MAAM,MAAM,GAAG;QACjB;IACF;IAEA,eAAe,CAAC;QACd,QACG,OAAO,CAAC,gJAAA,CAAA,aAAU,CAAC,OAAO,EAAE,CAAC,OAAO;YAClC,MAAM,SAAS,GAAG,MAAQ,MAAM,OAAO,GAAG;QAC7C,GACC,OAAO,CAAC,gJAAA,CAAA,aAAU,CAAC,SAAS,EAAE,CAAC,OAAO;YACpC,MAAM,OAAO,GAAG,OACd,MAAM,SAAS,GAAG,OAClB,MAAM,QAAQ,GAAG,MACjB,MAAM,WAAW,GAAG,MACpB,MAAM,IAAI,GAAG,OAAO,OAAO,CAAC,IAAI,CAAC,OAAO;QAC7C,GACC,OAAO,CAAC,gJAAA,CAAA,aAAU,CAAC,QAAQ,EAAE,CAAC,OAAO;YACnC,MAAM,OAAO,GAAG,MACd,MAAM,SAAS,GAAG,OAClB,MAAM,OAAO,GAAG,OAAO,OAAO;QACnC,GACC,OAAO,CAAC,gJAAA,CAAA,gBAAa,CAAC,SAAS,EAAE,CAAC,OAAO;YACxC,MAAM,MAAM,GAAG,OAAO,OAAO,CAAC,OAAO;YACrC,MAAM,QAAQ,GAAG,OAAO,OAAO,CAAC,OAAO;YACvC,QAAQ,GAAG,CAAC,MAAM,QAAQ;QAC5B;IACJ;AACF;AAEO,MAAM,EAAE,SAAS,EAAE,GAAG,UAAU,OAAO;uCAE/B,UAAU,OAAO","debugId":null}},
    {"offset": {"line": 426, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Desktop/LinkdinClone/frontend/src/config/redux/store.js"],"sourcesContent":["/** STEPS for State Management\r\n * Submit Action\r\n * Handle action in it's reducer\r\n * Register Here -> Reducer\r\n * */\r\n\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport authSlice from \"./reducer/authReducer\";\r\nimport postSlice from \"./reducer/postReducer\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: authSlice,\r\n    postReducer: postSlice,\r\n  },\r\n});\r\n"],"names":[],"mappings":"AAAA;;;;GAIG;;;AAEH;AACA;AACA;;;;;;;;;;AAEO,MAAM,QAAQ,CAAA,GAAA,wIAAA,CAAA,iBAAc,AAAD,EAAE;IAClC,SAAS;QACP,MAAM,kJAAA,CAAA,UAAS;QACf,aAAa,kJAAA,CAAA,UAAS;IACxB;AACF","debugId":null}},
    {"offset": {"line": 468, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/Desktop/LinkdinClone/frontend/src/pages/_app.js"],"sourcesContent":["import { store} from \"@/config/redux/store\";\nimport \"@/styles/globals.css\";\nimport { Provider } from \"react-redux\";\n\nexport default function App({ Component, pageProps }) {\n  return (\n    <>\n      <Provider store={store}>\n        <Component {...pageProps} />\n      </Provider>\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;;;;;;;AAEe,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE;IAClD,qBACE;kBACE,cAAA,qKAAC,4HAAA,CAAA,WAAQ;YAAC,OAAO,wHAAA,CAAA,QAAK;sBACpB,cAAA,qKAAC;gBAAW,GAAG,SAAS;;;;;;;;;;;;AAIhC","debugId":null}}]
}